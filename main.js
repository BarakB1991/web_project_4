!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}resetValidation(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(e,t)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(e,t){e.some((e=>!e.validity.valid))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_showInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((r=>{r.addEventListener("input",(()=>{this._checkInputValidity(r),this._toggleButtonState(e,t)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class r{constructor(e){let{cardData:r,cardTemplateSelector:s,onImageClick:n,userId:o,handleDeleteCardClick:i,handleLikeCardClick:a}=e;t(this,"renderLikeContainer",(()=>{this._element.querySelector(".card__like-counter").textContent=this._likeCounter.length,this.isLikedByUser()?this._addLikeButton():this._removeLikeButton()})),t(this,"removeCardElement",(()=>{this._element.remove(),this._element=null})),t(this,"_addEventListeners",(()=>{this._element.querySelector(".card__like-btn").addEventListener("click",(e=>this._handleLikeCardClick(this._cardId)));const e=this._element.querySelector(".card__delete-btn");this._cardUserId===this._userId?e.addEventListener("click",(()=>this._handleDeleteCardClick(this._cardId))):e.remove(),this._element.querySelector(".card__img").addEventListener("click",(()=>this._handlePreviewPicture()))})),t(this,"_removeLikeButton",(()=>{this._element.querySelector(".card__like-btn").classList.remove("card__like-btn_active")})),t(this,"_addLikeButton",(()=>{this._element.querySelector(".card__like-btn").classList.add("card__like-btn_active")})),t(this,"_handlePreviewPicture",(()=>{this._onImageClick({link:this._link,name:this._name})})),t(this,"renderCard",(()=>{this._element=this._template.cloneNode(!0);const e=this._element.querySelector(".card__img"),t=this._element.querySelector(".card__like-counter");return e.src=this._link,e.alt=this._name,this._element.id=this._cardUserId,t.textContent=this._likeCounter.length,this._element.querySelector(".card__title").textContent=this._name,this._addEventListeners(),this.renderLikeContainer(),this._element})),this._name=r.name,this._link=r.link,this._cardUserId=r.owner._id,this._cardId=r._id,this._likeCounter=r.likes,this._userId=o,this._onImageClick=n,this._handleDeleteCardClick=i,this._handleLikeCardClick=a,this._template=document.querySelector(s).content.querySelector(".card")}isLikedByUser(){return this._likeCounter.some((e=>e._id===this._userId))}updateLikeCounter(e){this._likeCounter=e.likes,this.renderLikeContainer()}}function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class n{constructor(e){s(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&this.close()})),s(this,"_handleEscClose",(e=>{e.preventDefault(),"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_visible"),document.addEventListener("keyup",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleMouseDown)}close(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keyup",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleMouseDown)}}class o extends n{constructor(e,t){super(e),this.handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._originalButtonText=this._form.querySelector('button[type="submit"]').textContent}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Saving..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent=this._originalButtonText}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit(this._getInputValues())}))}open(){super.open()}close(){super.close(),this._form.reset()}}const i=document.querySelector(".popup_type_edit-profile"),a=document.querySelector(".popup_type_add-card"),l=document.querySelector(".popup_type_edit-avatar"),u=document.querySelector(".profile"),c=u.querySelector(".profile__name"),d=u.querySelector(".profile__about"),_=u.querySelector(".profile__img"),h=document.querySelector(".popup_type_image"),p=(h.querySelector(".popup__title_type_image"),h.querySelector(".popup__image"),u.querySelector(".profile__edit-btn")),m=u.querySelector(".profile__add-btn"),v=document.querySelector(".profile__img-button"),y=(document.querySelector(".cards__list"),{inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),b=(document.querySelector("#add-card-form"),document.querySelector("#edit-profile-form")),k=b.querySelector("#input-name"),C=b.querySelector("#input-profession");function f(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const L=new class{constructor(e){let{userName:t,userAbout:r,avatar:s,userId:n}=e;this._userName=t,this._userAbout=r,this._avatar=s,this._userId=n}getUserInfo(){return{userName:this._userName.textContent,userAbout:this._userAbout.textContent,avatar:this._avatar}}setUserInfo(e){let{userName:t,userAbout:r}=e;this._userName.textContent=t,this._userAbout.textContent=r}setUserAvatar(e){this._avatar.src=e,this._avatar.alt="Avatar"}setUserId(e){this._userId.id=e}}({userName:c,userAbout:d,avatar:_,userId:u}),S=new class{constructor(e){f(this,"removeUserCard",(e=>fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),f(this,"addLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),f(this,"removeLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),f(this,"editAvatar",(e=>fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),this._url=e.baseUrl,this._token=e.token}promiseCardsAndUserData(){return Promise.all([this.getUserData(),this.getInitialCards()])}getInitialCards(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getUserData(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}editProfile(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}addNewCard(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._token,"content-type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",token:"c785e696-84a9-4aca-b3d2-750b2694b444"}),E=new class extends n{constructor(e){var t,r;super(e),r=()=>{this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()}))},(t="setEventListeners")in this?Object.defineProperty(this,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[t]=r,this._form=this._popup.querySelector(".popup__form")}submitHandler(e){this._submitHandler=e}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Loading..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Yes"}open(){super.open()}close(){super.close()}}(".popup_type_confirm");E.setEventListeners();const g=new class extends n{constructor(e){var t,r;super(e),r=e=>{let{link:t,name:r}=e;super.open();const s=this._popup.querySelector(".popup__title_type_image"),n=this._popup.querySelector(".popup__image");s.textContent=r,n.src=t,n.alt=r},(t="open")in this?Object.defineProperty(this,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):this.open=r}}(".popup_type_image");function q(e){const t=new r({cardData:e,cardTemplateSelector:"#card-template",onImageClick:g.open,userId:u.id,handleDeleteCardClick:e=>{E.open(),E.submitHandler((()=>{S.removeUserCard(e).then(E.renderLoadingOnButton()).then((()=>{t.removeCardElement()})).catch((e=>console.log(e))).finally((()=>{E.close(),E.removeLoadingOnButton()}))}))},handleLikeCardClick:e=>{1==t.isLikedByUser()?S.removeLike(e).then((e=>t.updateLikeCounter(e))):S.addLike(e).then((e=>t.updateLikeCounter(e)))}}),s=t.renderCard();I.addItem(s)}const I=new class{constructor(e,t){let{renderer:r}=t;this._renderer=r,this._container=document.querySelector(e)}addItem(e){this._container.prepend(e)}renderer(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}}(".cards__list",{renderer:q}),B=new o(".popup_type_edit-profile",(async e=>{let{name:t,profession:r}=e;B.renderLoadingOnButton();const s=await S.editProfile(t,r);Promise.resolve(s)&&(L.setUserInfo({userName:t,userAbout:r}),B.close(),B.removeLoadingOnButton())})),w=new o(".popup_type_add-card",(async e=>{const{cardtitle:t,imagelink:r}=e;w.renderLoadingOnButton();const s=await S.addNewCard(t,r);s&&(q(s),w.close(),w.removeLoadingOnButton())})),j=new o(".popup_type_edit-avatar",(async e=>{const{avatar:t}=e;j.renderLoadingOnButton();const r=await S.editAvatar(t);Promise.resolve(r)?(L.setUserAvatar(t),j.close(),j.removeLoadingOnButton()):console.log(Promise.reject(r))}));B.setEventListeners(),w.setEventListeners(),j.setEventListeners();const P=new e(y,a),U=new e(y,i),A=new e(y,l);v.addEventListener("click",(()=>{j.open(),A.resetValidation()})),p.addEventListener("click",(()=>{B.open();const{userName:e,userAbout:t}=L.getUserInfo();k.value=e,C.value=t})),m.addEventListener("click",(()=>{w.open(),P.resetValidation()})),P.enableValidation(),U.enableValidation(),A.enableValidation(),S.promiseCardsAndUserData().then((e=>{let[t,r]=e;L.setUserInfo({userName:t.name,userAbout:t.about}),L.setUserAvatar(t.avatar),L.setUserId(t._id),I.renderer(r)})).catch((e=>console.log(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,