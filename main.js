!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}resetValidation(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(e,t)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(e,t){e.some((e=>!e.validity.valid))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_showInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((s=>{s.addEventListener("input",(()=>{this._checkInputValidity(s),this._toggleButtonState(e,t)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,n){t(this,"_addEventListeners",(()=>{this._element.querySelector(".card__like-btn").addEventListener("click",this._handleLikeButton),this._element.querySelector(".card__delete-btn").addEventListener("click",this._handleDeleteButton),this._element.querySelector(".card__img").addEventListener("click",(()=>this._handlePreviewPicture()))})),t(this,"_handleDeleteButton",(e=>{e.stopPropagation(),this._element.remove(),this._element=null})),t(this,"_handleLikeButton",(e=>{e.stopPropagation(),e.target.classList.toggle("card__like-btn_active")})),t(this,"_handlePreviewPicture",(()=>{this._onImageClick({link:this._link,name:this._name})})),t(this,"renderCard",(()=>{this._element=this._template.cloneNode(!0);const e=this._element.querySelector(".card__img");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._addEventListeners(),this._element})),this._name=e.name,this._link=e.link,this._template=document.querySelector(s).content.querySelector(".card"),this._onImageClick=n}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){n(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&this.close()})),n(this,"_handleEscClose",(e=>{e.preventDefault(),"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_visible"),document.addEventListener("keyup",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleMouseDown)}close(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keyup",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleMouseDown)}}class o extends r{constructor(e,t){super(e),this.handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit(this._getInputValues()),this.close()}))}open(){super.open()}close(){super.close(),this._form.reset()}}const i=document.querySelector(".popup_type_edit-profile"),l=document.querySelector(".popup_type_add-card"),a=document.querySelector(".profile"),c=a.querySelector(".profile__name"),u=a.querySelector(".profile__about"),p=document.querySelector("#add-card-form"),_=document.querySelector("#edit-profile-form"),d=_.querySelector("#input-name"),h=_.querySelector("#input-profession"),m=(p.querySelector("#input-card-title"),p.querySelector("#input-image-link"),document.querySelector(".popup_type_image")),y=(m.querySelector(".popup__title_type_image"),m.querySelector(".popup__image"),a.querySelector(".profile__edit-btn")),f=a.querySelector(".profile__add-btn");document.querySelector(".cards__list");const v=new class{constructor(e){let{name:t,profession:s}=e;this._name=t,this._profession=s}getUserInfo(){return{name:this._name.textContent,profession:this._profession.textContent}}setUserInfo(e){let{name:t,profession:s}=e;this._name.textContent=t,this._profession.textContent=s}}({name:c,profession:u});v.setUserInfo({name:"Abraham Lincoln",profession:"A founding Father"});const S=new class extends r{constructor(e){var t,s;super(e),s=e=>{let{link:t,name:s}=e;super.open();const n=this._popup.querySelector(".popup__title_type_image"),r=this._popup.querySelector(".popup__image");n.textContent=s,r.src=t,r.alt=s},(t="open")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this.open=s}}(".popup_type_image");function b(e){const t=new s(e,"#card-template",S.open).renderCard();E.addItem(t)}const E=new class{constructor(e,t){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}addItem(e){this._container.prepend(e)}renderer(){this._items.forEach((e=>{this._renderer(e)}))}}(".cards__list",{items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:b});E.renderer();const g=new o(".popup_type_edit-profile",(e=>{v.setUserInfo(e)})),L=new o(".popup_type_add-card",(e=>{const{cardtitle:t,imagelink:s}=e;b({name:t,link:s})}));g.setEventListeners(),L.setEventListeners();const q={inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},k=new e(q,l),C=new e(q,i);y.addEventListener("click",(()=>{g.open();const{name:e,profession:t}=v.getUserInfo();d.value=e,h.value=t})),f.addEventListener("click",(()=>{L.open(),k.resetValidation()})),k.enableValidation(),C.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,