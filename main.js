!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(this._inputElements,this._buttonElement)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._inputElements.some((e=>!e.validity.valid))?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_showInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class n{constructor(e){let{cardData:n,cardTemplateSelector:r,onImageClick:s,userId:i,handleDeleteCardClick:o,handleLikeCardClick:a}=e;t(this,"_renderLikeContainer",(()=>{this._element.querySelector(".card__like-counter").textContent=this._likeCounter.length,this.isLikedByUser()?this._addLikeButton():this._removeLikeButton()})),t(this,"removeCardElement",(()=>{this._element.remove(),this._element=null})),t(this,"_addEventListeners",(()=>{this._likeButton.addEventListener("click",(e=>this._handleLikeCardClick(this._cardId)));const e=this._element.querySelector(".card__delete-btn");this._cardUserId===this._userId?e.addEventListener("click",(()=>this._handleDeleteCardClick(this._cardId))):e.remove(),this._element.querySelector(".card__img").addEventListener("click",(()=>this._handlePreviewPicture()))})),t(this,"_removeLikeButton",(()=>{this._likeButton.classList.remove("card__like-btn_active")})),t(this,"_addLikeButton",(()=>{this._likeButton.classList.add("card__like-btn_active")})),t(this,"_handlePreviewPicture",(()=>{this._onImageClick({link:this._link,name:this._name})})),t(this,"renderCard",(()=>{this._element=this._template.cloneNode(!0);const e=this._element.querySelector(".card__img"),t=this._element.querySelector(".card__like-counter");return e.src=this._link,e.alt=this._name,t.textContent=this._likeCounter.length,this._element.querySelector(".card__title").textContent=this._name,this._likeButton=this._element.querySelector(".card__like-btn"),this._addEventListeners(),this._renderLikeContainer(),this._element})),this._name=n.name,this._link=n.link,this._cardUserId=n.owner._id,this._cardId=n._id,this._likeCounter=n.likes,this._userId=i,this._onImageClick=s,this._handleDeleteCardClick=o,this._handleLikeCardClick=a,this._template=document.querySelector(r).content.querySelector(".card")}isLikedByUser(){return this._likeCounter.some((e=>e._id===this._userId))}updateLikeCounter(e){this._likeCounter=e.likes,this._renderLikeContainer()}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class s{constructor(e){r(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&this.close()})),r(this,"_handleEscClose",(e=>{e.preventDefault(),"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_visible"),document.addEventListener("keyup",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleMouseDown)}close(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keyup",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleMouseDown)}}class i extends s{constructor(e,t){super(e),this.handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._originalButtonText=this._form.querySelector('button[type="submit"]').textContent}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Saving..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent=this._originalButtonText}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit(this._getInputValues())}))}close(){super.close(),this._form.reset()}}const o=document.querySelector(".popup_type_edit-profile"),a=document.querySelector(".popup_type_add-card"),l=document.querySelector(".popup_type_edit-avatar"),u=document.querySelector(".profile"),c=u.querySelector(".profile__name"),d=u.querySelector(".profile__about"),h=u.querySelector(".profile__img"),_=document.querySelector(".popup_type_image"),p=(_.querySelector(".popup__title_type_image"),_.querySelector(".popup__image"),u.querySelector(".profile__edit-btn")),m=u.querySelector(".profile__add-btn"),v=document.querySelector(".profile__img-button"),y=(document.querySelector(".cards__list"),{inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),b=(document.querySelector("#add-card-form"),document.querySelector("#edit-profile-form")),C=b.querySelector("#input-name"),k=b.querySelector("#input-profession");function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const g=new class{constructor(e){let{userName:t,userAbout:n,avatar:r,userId:s}=e;this._userName=t,this._userAbout=n,this._avatar=r,this._userId=s}getUserInfo(){return{userName:this._userName.textContent,userAbout:this._userAbout.textContent,avatar:this._avatar}}setUserInfo(e){let{userName:t,userAbout:n}=e;this._userName.textContent=t,this._userAbout.textContent=n}setUserAvatar(e){this._avatar.src=e}setUserId(e){this._userId.id=e}}({userName:c,userAbout:d,avatar:h,userId:u}),L=new class{constructor(e){f(this,"removeUserCard",(e=>fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>this._getResponseData(e))))),f(this,"addLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>this._getResponseData(e))))),f(this,"removeLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>this._getResponseData(e))))),f(this,"editAvatar",(e=>fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>this._getResponseData(e))))),this._url=e.baseUrl,this._token=e.token}getCardsAndUserData(){return Promise.all([this.getUserData(),this.getInitialCards()])}getInitialCards(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token}}).then((e=>this._getResponseData(e)))}getUserData(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._token}}).then((e=>this._getResponseData(e)))}editProfile(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((e=>this._getResponseData(e)))}addNewCard(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._token,"content-type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>this._getResponseData(e)))}_getResponseData(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",token:"c785e696-84a9-4aca-b3d2-750b2694b444"}),E=new class extends s{constructor(e){var t,n;super(e),n=()=>{this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))},(t="setEventListeners")in this?Object.defineProperty(this,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[t]=n,this._form=this._popup.querySelector(".popup__form")}setSubmitHandler(e){this._handleSubmit=e}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Loading..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Yes"}}(".popup_type_confirm");E.setEventListeners();const S=new class extends s{constructor(e){var t,n;super(e),n=e=>{let{link:t,name:n}=e;super.open();const r=this._popup.querySelector(".popup__title_type_image"),s=this._popup.querySelector(".popup__image");r.textContent=n,s.src=t,s.alt=n},(t="open")in this?Object.defineProperty(this,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):this.open=n}}(".popup_type_image");function q(e){const t=new n({cardData:e,cardTemplateSelector:"#card-template",onImageClick:S.open,userId:u.id,handleDeleteCardClick:e=>{E.open(),E.setSubmitHandler((()=>{E.renderLoadingOnButton(),L.removeUserCard(e).then((()=>{t.removeCardElement(),E.close()})).catch((e=>console.log(e))).finally((()=>{E.removeLoadingOnButton()}))}))},handleLikeCardClick:e=>{1==t.isLikedByUser()?L.removeLike(e).then((e=>t.updateLikeCounter(e))).catch((e=>console.log(e))):L.addLike(e).then((e=>t.updateLikeCounter(e))).catch((e=>console.log(e)))}}),r=t.renderCard();B.addItem(r)}const B=new class{constructor(e,t){let{renderer:n}=t;this._renderer=n,this._container=document.querySelector(e)}addItem(e){this._container.prepend(e)}renderer(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}}(".cards__list",{renderer:q}),I=new i(".popup_type_edit-profile",(async e=>{let{name:t,profession:n}=e;I.renderLoadingOnButton();try{await L.editProfile(t,n)&&(g.setUserInfo({userName:t,userAbout:n}),I.close(),I.removeLoadingOnButton())}catch(e){console.log("Could not perform request: ".concat(e)),I.removeLoadingOnButton()}})),w=new i(".popup_type_add-card",(async e=>{const{cardtitle:t,imagelink:n}=e;w.renderLoadingOnButton();try{const e=await L.addNewCard(t,n);e&&(q(e),w.close(),w.removeLoadingOnButton())}catch(e){console.log("Could not perform request: ".concat(e)),w.removeLoadingOnButton()}})),D=new i(".popup_type_edit-avatar",(async e=>{const{avatar:t}=e;D.renderLoadingOnButton();try{await L.editAvatar(t)&&(g.setUserAvatar(t),D.close(),D.removeLoadingOnButton())}catch(e){console.log("Could not perform request: ".concat(e)),D.removeLoadingOnButton()}}));I.setEventListeners(),w.setEventListeners(),D.setEventListeners();const O=new e(y,a),U=new e(y,o),A=new e(y,l);v.addEventListener("click",(()=>{D.open(),A.resetValidation()})),p.addEventListener("click",(()=>{I.open(),function(){const{userName:e,userAbout:t}=g.getUserInfo();C.value=e,k.value=t}(),U.resetValidation()})),m.addEventListener("click",(()=>{w.open(),O.resetValidation()})),O.enableValidation(),U.enableValidation(),A.enableValidation(),L.getCardsAndUserData().then((e=>{let[t,n]=e;g.setUserInfo({userName:t.name,userAbout:t.about}),g.setUserAvatar(t.avatar),g.setUserId(t._id),B.renderer(n)})).catch((e=>console.log(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,