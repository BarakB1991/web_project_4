!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}resetValidation(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(e,t)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(e,t){e.some((e=>!e.validity.valid))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_showInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const e=[...this._formElement.querySelectorAll(this._inputSelector)],t=this._formElement.querySelector(this._submitButtonSelector);e.forEach((r=>{r.addEventListener("input",(()=>{this._checkInputValidity(r),this._toggleButtonState(e,t)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class r{constructor(e){let{cardData:r,cardTemplateSelector:s,onImageClick:n,userId:o,handleDeleteCardClick:i,handleLikeCardClick:a}=e;t(this,"renderLikeContainer",(()=>{this._element.querySelector(".card__like-counter").textContent=this._likeCounter.length,this.isLikedByUser()?this._addLikeButton():this._removeLikeButton()})),t(this,"removeCardElement",(()=>{this._element.remove(),this._element=null})),t(this,"_addEventListeners",(()=>{this._element.querySelector(".card__like-btn").addEventListener("click",(e=>this._handleLikeCardClick(this._cardId)));const e=this._element.querySelector(".card__delete-btn");this._cardUserId===this._userId?e.addEventListener("click",(()=>this._handleDeleteCardClick(this._cardId))):e.remove(),this._element.querySelector(".card__img").addEventListener("click",(()=>this._handlePreviewPicture()))})),t(this,"_removeLikeButton",(()=>{this._element.querySelector(".card__like-btn").classList.remove("card__like-btn_active")})),t(this,"_addLikeButton",(()=>{this._element.querySelector(".card__like-btn").classList.add("card__like-btn_active")})),t(this,"_handlePreviewPicture",(()=>{this._onImageClick({link:this._link,name:this._name})})),t(this,"renderCard",(()=>{this._element=this._template.cloneNode(!0);const e=this._element.querySelector(".card__img"),t=this._element.querySelector(".card__like-counter");return e.src=this._link,e.alt=this._name,this._element.id=this._cardUserId,t.textContent=this._likeCounter.length,this._element.querySelector(".card__title").textContent=this._name,this._addEventListeners(),this.renderLikeContainer(),this._element})),this._name=r.name,this._link=r.link,this._cardUserId=r.owner._id,this._cardId=r._id,this._likeCounter=r.likes,this._userId=o,this._onImageClick=n,this._handleDeleteCardClick=i,this._handleLikeCardClick=a,this._template=document.querySelector(s).content.querySelector(".card")}isLikedByUser(){return this._likeCounter.some((e=>e._id===this._userId))}updateLikeCounter(e){this._likeCounter=e.likes,this.renderLikeContainer()}}function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class n{constructor(e){s(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&this.close()})),s(this,"_handleEscClose",(e=>{e.preventDefault(),"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_visible"),document.addEventListener("keyup",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleMouseDown)}close(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keyup",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleMouseDown)}}class o extends n{constructor(e,t){super(e),this.handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._originalButtonText=this._form.querySelector('button[type="submit"]').textContent}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Saving..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent=this._originalButtonText}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit(this._getInputValues())}))}open(){super.open()}close(){super.close(),this._form.reset()}}const i=document.querySelector(".popup_type_edit-profile"),a=document.querySelector(".popup_type_add-card"),l=document.querySelector(".popup_type_edit-avatar"),u=document.querySelector(".profile"),c=u.querySelector(".profile__name"),d=u.querySelector(".profile__about"),_=u.querySelector(".profile__img"),h=document.querySelector(".popup_type_image"),p=(h.querySelector(".popup__title_type_image"),h.querySelector(".popup__image"),u.querySelector(".profile__edit-btn")),m=u.querySelector(".profile__add-btn"),v=document.querySelector(".profile__img-button"),y=(document.querySelector(".cards__list"),{inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),b=document.querySelector("#add-card-form"),k=document.querySelector("#edit-profile-form"),C=k.querySelector("#input-name"),f=k.querySelector("#input-profession");function L(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}b.querySelector("#input-card-title"),b.querySelector("#input-image-link");const S=new class{constructor(e){let{userName:t,userAbout:r,avatar:s,userId:n}=e;this._userName=t,this._userAbout=r,this._avatar=s,this._userId=n}getUserInfo(){return{userName:this._userName.textContent,userAbout:this._userAbout.textContent,avatar:this._avatar}}setUserInfo(e){let{userName:t,userAbout:r}=e;this._userName.textContent=t,this._userAbout.textContent=r}setUserAvatar(e){this._avatar.src=e,this._avatar.alt="Avatar"}setUserId(e){this._userId.id=e}}({userName:c,userAbout:d,avatar:_,userId:u}),E=new class{constructor(e){L(this,"removeUserCard",(e=>fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),L(this,"addLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),L(this,"removeLike",(e=>fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),L(this,"editAvatar",(e=>fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),this._url=e.baseUrl,this._token=e.token}promiseCardsAndUserData(){return Promise.all([this.getUserData(),this.getInitialCards()])}getInitialCards(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getUserData(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}editProfile(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}addNewCard(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._token,"content-type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",token:"c785e696-84a9-4aca-b3d2-750b2694b444"}),g=new class extends n{constructor(e){var t,r;super(e),r=()=>{this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()}))},(t="setEventListeners")in this?Object.defineProperty(this,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[t]=r,this._form=this._popup.querySelector(".popup__form")}submitHandler(e){this._submitHandler=e}renderLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Loading..."}removeLoadingOnButton(){this._form.querySelector('button[type="submit"]').textContent="Yes"}open(){super.open()}close(){super.close()}}(".popup_type_confirm");g.setEventListeners();const q=new class extends n{constructor(e){var t,r;super(e),r=e=>{let{link:t,name:r}=e;super.open();const s=this._popup.querySelector(".popup__title_type_image"),n=this._popup.querySelector(".popup__image");s.textContent=r,n.src=t,n.alt=r},(t="open")in this?Object.defineProperty(this,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):this.open=r}}(".popup_type_image");function I(e){const t=new r({cardData:e,cardTemplateSelector:"#card-template",onImageClick:q.open,userId:u.id,handleDeleteCardClick:e=>{g.open(),g.submitHandler((()=>{E.removeUserCard(e).then(g.renderLoadingOnButton()).then((()=>{t.removeCardElement()})).catch((e=>console.log(e))).finally((()=>{g.close(),g.removeLoadingOnButton()}))}))},handleLikeCardClick:e=>{1==t.isLikedByUser()?E.removeLike(e).then((e=>t.updateLikeCounter(e))):E.addLike(e).then((e=>t.updateLikeCounter(e)))}}),s=t.renderCard();B.addItem(s)}const B=new class{constructor(e,t){let{renderer:r}=t;this._renderer=r,this._container=document.querySelector(e)}addItem(e){this._container.prepend(e)}renderer(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}}(".cards__list",{renderer:I}),w=new o(".popup_type_edit-profile",(async e=>{let{name:t,profession:r}=e;w.renderLoadingOnButton();const s=await E.editProfile(t,r);Promise.resolve(s)&&(S.setUserInfo({userName:t,userAbout:r}),w.close(),w.removeLoadingOnButton())})),j=new o(".popup_type_add-card",(async e=>{const{cardtitle:t,imagelink:r}=e;j.renderLoadingOnButton();const s=await E.addNewCard(t,r);s&&(I(s),j.close(),j.removeLoadingOnButton())})),P=new o("#edit-avatar-form",(async e=>{const{avatar:t}=e;P.renderLoadingOnButton();const r=await E.editAvatar(t);Promise.resolve(r)?(S.setUserAvatar(t),P.close(),P.removeLoadingOnButton()):console.log(Promise.reject(r))}));w.setEventListeners(),j.setEventListeners(),P.setEventListeners();const U=new e(y,a),A=new e(y,i),O=new e(y,l);v.addEventListener("click",(()=>{P.open(),O.resetValidation()})),p.addEventListener("click",(()=>{w.open();const{userName:e,userAbout:t}=S.getUserInfo();C.value=e,f.value=t})),m.addEventListener("click",(()=>{j.open(),U.resetValidation()})),U.enableValidation(),A.enableValidation(),O.enableValidation(),E.promiseCardsAndUserData().then((e=>{let[t,r]=e;S.setUserInfo({userName:t.name,userAbout:t.about}),S.setUserAvatar(t.avatar),S.setUserId(t._id),B.renderer(r)})).catch((e=>console.log(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFtQnpHLE9BQ25CLE1BQU0sU0FBQ21DLEVBQUQsVUFBV0MsR0FBYUYsRUFBU08sY0FDdkNULEVBQVVuQixNQUFRc0IsRUFDbEJGLEVBQWdCcEIsTUFBUXVCLEtBRzFCVCxFQUF5QjlFLGlCQUFpQixTQUFTLEtBQ2pEaUssRUFBbUI5RyxPQUNuQnNILEVBQWtCaE0scUJBR3BCZ00sRUFBa0J4SyxtQkFDbEIwSyxFQUFxQjFLLG1CQUNyQjJLLEVBQW9CM0ssbUJBRXBCK0YsRUFDR3FCLDBCQUNBWixNQUFLLElBQXVCLElBQXJCb0UsRUFBVUMsR0FBVyxFQUMzQnpGLEVBQVNRLFlBQVksQ0FDbkJQLFNBQVV1RixFQUFTbEosS0FDbkI0RCxVQUFXc0YsRUFBU2xELFFBRXRCdEMsRUFBU1MsY0FBYytFLEVBQVNyRixRQUNoQ0gsRUFBU1UsVUFBVThFLEVBQVN2SSxLQUM1QjRHLEVBQVlHLFNBQVN5QixNQUV0QnJDLE9BQU1DLEdBQU9DLFFBQVFDLElBQUlGLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICBjb25zdCBpbnB1dEVsZW1lbnRzID0gWy4uLnRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcildO1xyXG4gICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgaW5wdXRFbGVtZW50cy5mb3JFYWNoKGlucHV0RWxlbWVudCA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0RWxlbWVudHMsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG5cclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0RWxlbWVudHMsIGJ1dHRvbkVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGhhc0ludmFsaWRJbnB1dCA9IGlucHV0RWxlbWVudHMuc29tZShpbnB1dEVsZW1lbnQgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgICBpZiAoaGFzSW52YWxpZElucHV0KSB7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuXHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGNvbnN0IGlucHV0RWxlbWVudHMgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07IC8vIG1hZGUgYXJyYXkgb2Ygbm9kZUxpc3RcclxuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuXHJcbiAgICBpbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXRFbGVtZW50ID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0RWxlbWVudHMsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGV2dCA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3Ioe2NhcmREYXRhLCBjYXJkVGVtcGxhdGVTZWxlY3Rvciwgb25JbWFnZUNsaWNrLCB1c2VySWQsIGhhbmRsZURlbGV0ZUNhcmRDbGljaywgaGFuZGxlTGlrZUNhcmRDbGlja30pIHtcclxuICAgIHRoaXMuX25hbWUgPSBjYXJkRGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGNhcmREYXRhLmxpbms7XHJcbiAgICB0aGlzLl9jYXJkVXNlcklkID0gY2FyZERhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5fY2FyZElkID0gY2FyZERhdGEuX2lkO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIgPSBjYXJkRGF0YS5saWtlcztcclxuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcclxuXHJcbiAgICB0aGlzLl9vbkltYWdlQ2xpY2sgPSBvbkltYWdlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkQ2xpY2sgPSBoYW5kbGVEZWxldGVDYXJkQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZENsaWNrID0gaGFuZGxlTGlrZUNhcmRDbGljaztcclxuXHJcbiAgICB0aGlzLl90ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZFRlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLmNhcmQnKTtcclxuICB9XHJcblxyXG4gIGlzTGlrZWRCeVVzZXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbGlrZUNvdW50ZXIuc29tZShsaWtlID0+IGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlTGlrZUNvdW50ZXIoY2FyZERhdGEpIHtcclxuICAgIHRoaXMuX2xpa2VDb3VudGVyID0gY2FyZERhdGEubGlrZXM7XHJcbiAgICB0aGlzLnJlbmRlckxpa2VDb250YWluZXIoKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckxpa2VDb250YWluZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBsaWtlQ291bnRlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtY291bnRlcicpO1xyXG4gICAgbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlQ291bnRlci5sZW5ndGg7XHJcblxyXG4gICAgIXRoaXMuaXNMaWtlZEJ5VXNlcigpID8gdGhpcy5fcmVtb3ZlTGlrZUJ1dHRvbigpIDogdGhpcy5fYWRkTGlrZUJ1dHRvbigpO1xyXG4gIH07XHJcblxyXG4gIHJlbW92ZUNhcmRFbGVtZW50ID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gIH07XHJcblxyXG4gIF9hZGRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcclxuICAgIGNvbnN0IGxpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWJ0bicpO1xyXG4gICAgbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2dCA9PiB0aGlzLl9oYW5kbGVMaWtlQ2FyZENsaWNrKHRoaXMuX2NhcmRJZCkpO1xyXG5cclxuICAgIGNvbnN0IGRlbGV0ZUNhcmRCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19kZWxldGUtYnRuJyk7XHJcbiAgICBpZiAodGhpcy5fY2FyZFVzZXJJZCA9PT0gdGhpcy5fdXNlcklkKSB7XHJcbiAgICAgIGRlbGV0ZUNhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDYXJkQ2xpY2sodGhpcy5fY2FyZElkKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkZWxldGVDYXJkQnV0dG9uLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZXZpZXdQaWN0dXJlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1nJyk7XHJcbiAgICBwcmV2aWV3UGljdHVyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZVByZXZpZXdQaWN0dXJlKCkpO1xyXG4gIH07XHJcblxyXG4gIF9yZW1vdmVMaWtlQnV0dG9uID0gKCkgPT4ge1xyXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtYnRuJyk7XHJcbiAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmRfX2xpa2UtYnRuX2FjdGl2ZScpO1xyXG4gIH07XHJcblxyXG4gIF9hZGRMaWtlQnV0dG9uID0gKCkgPT4ge1xyXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtYnRuJyk7XHJcbiAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnRuX2FjdGl2ZScpO1xyXG4gIH07XHJcblxyXG4gIF9oYW5kbGVQcmV2aWV3UGljdHVyZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX29uSW1hZ2VDbGljayh7bGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZX0pO1xyXG4gIH07XHJcblxyXG4gIHJlbmRlckNhcmQgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fdGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgY29uc3QgY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1nJyk7XHJcbiAgICBjb25zdCBjYXJkTGlrZUNvdW50ZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWNvdW50ZXInKTtcclxuICAgIGNhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgY2FyZEltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9lbGVtZW50LmlkID0gdGhpcy5fY2FyZFVzZXJJZDtcclxuICAgIGNhcmRMaWtlQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VDb3VudGVyLmxlbmd0aDtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fYWRkRXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLnJlbmRlckxpa2VDb250YWluZXIoKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9O1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfdmlzaWJsZScpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9oYW5kbGVNb3VzZURvd24pO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF92aXNpYmxlJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIHRoaXMuX3BvcHVwLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2hhbmRsZU1vdXNlRG93bik7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlTW91c2VEb3duID0gZXZ0ID0+IHtcclxuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXAnKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlLWJ0bicpKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSBldnQgPT4ge1xyXG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpOyAvLyB0aGlzLl9wb3B1cFxyXG4gICAgdGhpcy5oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9vcmlnaW5hbEJ1dHRvblRleHQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvblt0eXBlPVwic3VibWl0XCJdJykudGV4dENvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JyldO1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuXHJcbiAgICBpbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICByZW5kZXJMb2FkaW5nT25CdXR0b24oKSB7XHJcbiAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvblt0eXBlPVwic3VibWl0XCJdJykudGV4dENvbnRlbnQgPSAnU2F2aW5nLi4uJztcclxuICB9XHJcblxyXG4gIHJlbW92ZUxvYWRpbmdPbkJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKS50ZXh0Q29udGVudCA9IHRoaXMuX29yaWdpbmFsQnV0dG9uVGV4dDtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBldnQgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5oYW5kbGVTdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIEVsZW1lbnRzXHJcbmV4cG9ydCBjb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlJyk7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9hZGQtY2FyZCcpO1xyXG5leHBvcnQgY29uc3QgZWRpdEF2YXRhclBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfZWRpdC1hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZScpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBwcm9maWxlQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlUHJvZmVzc2lvbiA9IHByb2ZpbGVDb250YWluZXIucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2Fib3V0Jyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gcHJvZmlsZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW1nJyk7XHJcblxyXG4vLyBJbWFnZSBQb3B1cCBFbGVtZW50c1xyXG5leHBvcnQgY29uc3QgaW1hZ2VQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2ltYWdlJyk7XHJcbmV4cG9ydCBjb25zdCBpbWFnZVBvcHVwVGl0bGVFbGVtZW50ID0gaW1hZ2VQb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3RpdGxlX3R5cGVfaW1hZ2UnKTtcclxuZXhwb3J0IGNvbnN0IGltYWdlUG9wdXBJbWFnZUVsZW1lbnQgPSBpbWFnZVBvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcclxuXHJcbi8vQnV0dG9uc1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBwcm9maWxlQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ0bicpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUFkZENhcmRGb3JtQnV0dG9uID0gcHJvZmlsZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ0bicpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbWctYnV0dG9uJyk7XHJcblxyXG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlU2VsZWN0b3IgPSAnI2NhcmQtdGVtcGxhdGUnO1xyXG5leHBvcnQgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZHNfX2xpc3QnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBmb3JtU2V0dGluZ3MgPSB7XHJcbiAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zdWJtaXQtYnRuJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdC1idG5fZGlzYWJsZWQnLFxyXG4gIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcclxuICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX3Zpc2libGUnXHJcbn07XHJcblxyXG4vLyBGb3JtcyBlbGVtZW50c1xyXG5leHBvcnQgY29uc3QgY2FyZEFkZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWNhcmQtZm9ybScpO1xyXG5leHBvcnQgY29uc3QgZWRpdFByb2ZpbGVGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtcHJvZmlsZS1mb3JtJyk7XHJcblxyXG5leHBvcnQgY29uc3QgbmFtZUlucHV0ID0gZWRpdFByb2ZpbGVGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dC1uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9mZXNzaW9uSW5wdXQgPSBlZGl0UHJvZmlsZUZvcm0ucXVlcnlTZWxlY3RvcignI2lucHV0LXByb2Zlc3Npb24nKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkSW5wdXRUaXRsZSA9IGNhcmRBZGRGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dC1jYXJkLXRpdGxlJyk7XHJcbmV4cG9ydCBjb25zdCBpbWFnZUlucHV0TGluayA9IGNhcmRBZGRGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dC1pbWFnZS1saW5rJyk7XHJcbiIsImltcG9ydCAnLi4vLi4vcGFnZXMvaW5kZXguY3NzJztcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcclxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UnO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0nO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzJztcclxuaW1wb3J0IHtcclxuICBlZGl0UHJvZmlsZVBvcHVwLFxyXG4gIGFkZENhcmRQb3B1cCxcclxuICBlZGl0QXZhdGFyUG9wdXAsXHJcbiAgcHJvZmVzc2lvbklucHV0LFxyXG4gIG5hbWVJbnB1dCxcclxuICBwcm9maWxlTmFtZSxcclxuICBwcm9maWxlUHJvZmVzc2lvbixcclxuICBwcm9maWxlRWRpdEJ1dHRvbixcclxuICBwcm9maWxlQWRkQ2FyZEZvcm1CdXR0b24sXHJcbiAgY2FyZFRlbXBsYXRlU2VsZWN0b3IsXHJcbiAgcHJvZmlsZUF2YXRhcixcclxuICBwcm9maWxlQ29udGFpbmVyLFxyXG4gIHByb2ZpbGVBdmF0YXJCdXR0b24sXHJcbiAgZm9ybVNldHRpbmdzXHJcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICB1c2VyTmFtZTogcHJvZmlsZU5hbWUsXHJcbiAgdXNlckFib3V0OiBwcm9maWxlUHJvZmVzc2lvbixcclxuICBhdmF0YXI6IHByb2ZpbGVBdmF0YXIsXHJcbiAgdXNlcklkOiBwcm9maWxlQ29udGFpbmVyXHJcbn0pO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogJ2h0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTInLFxyXG4gIHRva2VuOiAnYzc4NWU2OTYtODRhOS00YWNhLWIzZDItNzUwYjI2OTRiNDQ0J1xyXG59KTtcclxuXHJcbmNvbnN0IGNvbmZpcm1hdGlvblBvcHVwID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbignLnBvcHVwX3R5cGVfY29uZmlybScpO1xyXG5jb25maXJtYXRpb25Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgaW1hZ2VQb3B1cFdpbmRvdyA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwX3R5cGVfaW1hZ2UnKTtcclxuXHJcbi8vIEluaXRpYWxpemUgIGNhcmRzXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoaXRlbSkge1xyXG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZCh7XHJcbiAgICBjYXJkRGF0YTogaXRlbSxcclxuICAgIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLFxyXG4gICAgb25JbWFnZUNsaWNrOiBpbWFnZVBvcHVwV2luZG93Lm9wZW4sXHJcbiAgICB1c2VySWQ6IHByb2ZpbGVDb250YWluZXIuaWQsXHJcbiAgICBoYW5kbGVEZWxldGVDYXJkQ2xpY2s6IGlkID0+IHtcclxuICAgICAgY29uZmlybWF0aW9uUG9wdXAub3BlbigpO1xyXG4gICAgICBjb25maXJtYXRpb25Qb3B1cC5zdWJtaXRIYW5kbGVyKCgpID0+IHtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5yZW1vdmVVc2VyQ2FyZChpZClcclxuICAgICAgICAgIC50aGVuKGNvbmZpcm1hdGlvblBvcHVwLnJlbmRlckxvYWRpbmdPbkJ1dHRvbigpKVxyXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBuZXdDYXJkLnJlbW92ZUNhcmRFbGVtZW50KCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25maXJtYXRpb25Qb3B1cC5jbG9zZSgpO1xyXG4gICAgICAgICAgICBjb25maXJtYXRpb25Qb3B1cC5yZW1vdmVMb2FkaW5nT25CdXR0b24oKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBoYW5kbGVMaWtlQ2FyZENsaWNrOiBpZCA9PiB7XHJcbiAgICAgIGNvbnN0IGlzTGlrZWRCeVVzZXIgPSBuZXdDYXJkLmlzTGlrZWRCeVVzZXIoKTtcclxuICAgICAgaWYgKGlzTGlrZWRCeVVzZXIgPT0gdHJ1ZSkge1xyXG4gICAgICAgIGFwaS5yZW1vdmVMaWtlKGlkKS50aGVuKGNhcmQgPT4gbmV3Q2FyZC51cGRhdGVMaWtlQ291bnRlcihjYXJkKSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBpLmFkZExpa2UoaWQpLnRoZW4oY2FyZCA9PiBuZXdDYXJkLnVwZGF0ZUxpa2VDb3VudGVyKGNhcmQpKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3Q2FyZC5yZW5kZXJDYXJkKCk7XHJcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbn1cclxuXHJcbi8vSW5pdGlhbGl6YSBDYXJkc1xyXG5jb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKCcuY2FyZHNfX2xpc3QnLCB7XHJcbiAgcmVuZGVyZXI6IHJlbmRlckNhcmRcclxufSk7XHJcblxyXG5jb25zdCBwcm9maWxlUG9wdXBXaW5kb3cgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlJywgYXN5bmMgKHtuYW1lOiB1c2VyTmFtZSwgcHJvZmVzc2lvbjogdXNlckFib3V0fSkgPT4ge1xyXG4gIHByb2ZpbGVQb3B1cFdpbmRvdy5yZW5kZXJMb2FkaW5nT25CdXR0b24oKTtcclxuICBjb25zdCBwcm9taXNlSW5mbyA9IGF3YWl0IGFwaS5lZGl0UHJvZmlsZSh1c2VyTmFtZSwgdXNlckFib3V0KTtcclxuICBpZiAoUHJvbWlzZS5yZXNvbHZlKHByb21pc2VJbmZvKSkge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oe3VzZXJOYW1lLCB1c2VyQWJvdXR9KTtcclxuICAgIHByb2ZpbGVQb3B1cFdpbmRvdy5jbG9zZSgpO1xyXG4gICAgcHJvZmlsZVBvcHVwV2luZG93LnJlbW92ZUxvYWRpbmdPbkJ1dHRvbigpO1xyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBhZGRDYXJkUG9wdXBXaW5kb3cgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX3R5cGVfYWRkLWNhcmQnLCBhc3luYyBkYXRhID0+IHtcclxuICBjb25zdCB7Y2FyZHRpdGxlOiBuYW1lLCBpbWFnZWxpbms6IGxpbmt9ID0gZGF0YTtcclxuICBhZGRDYXJkUG9wdXBXaW5kb3cucmVuZGVyTG9hZGluZ09uQnV0dG9uKCk7XHJcbiAgY29uc3QgY2FyZCA9IGF3YWl0IGFwaS5hZGROZXdDYXJkKG5hbWUsIGxpbmspO1xyXG4gIGlmIChjYXJkKSB7XHJcbiAgICByZW5kZXJDYXJkKGNhcmQpO1xyXG4gICAgYWRkQ2FyZFBvcHVwV2luZG93LmNsb3NlKCk7XHJcbiAgICBhZGRDYXJkUG9wdXBXaW5kb3cucmVtb3ZlTG9hZGluZ09uQnV0dG9uKCk7XHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IGVkaXRBdmF0YXJQb3B1cFdpbmRvdyA9IG5ldyBQb3B1cFdpdGhGb3JtKCcjZWRpdC1hdmF0YXItZm9ybScsIGFzeW5jIGF2YXRhciA9PiB7XHJcbiAgY29uc3Qge2F2YXRhcjogYXZhdGFyVXJsfSA9IGF2YXRhcjtcclxuICBlZGl0QXZhdGFyUG9wdXBXaW5kb3cucmVuZGVyTG9hZGluZ09uQnV0dG9uKCk7XHJcbiAgY29uc3Qgc2VuZEF2YXRhciA9IGF3YWl0IGFwaS5lZGl0QXZhdGFyKGF2YXRhclVybCk7XHJcbiAgaWYgKFByb21pc2UucmVzb2x2ZShzZW5kQXZhdGFyKSkge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckF2YXRhcihhdmF0YXJVcmwpO1xyXG4gICAgZWRpdEF2YXRhclBvcHVwV2luZG93LmNsb3NlKCk7XHJcbiAgICBlZGl0QXZhdGFyUG9wdXBXaW5kb3cucmVtb3ZlTG9hZGluZ09uQnV0dG9uKCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnNvbGUubG9nKFByb21pc2UucmVqZWN0KHNlbmRBdmF0YXIpKTtcclxuICB9XHJcbn0pO1xyXG5cclxucHJvZmlsZVBvcHVwV2luZG93LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmFkZENhcmRQb3B1cFdpbmRvdy5zZXRFdmVudExpc3RlbmVycygpO1xyXG5lZGl0QXZhdGFyUG9wdXBXaW5kb3cuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGNhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNldHRpbmdzLCBhZGRDYXJkUG9wdXApO1xyXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZXR0aW5ncywgZWRpdFByb2ZpbGVQb3B1cCk7XHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtU2V0dGluZ3MsIGVkaXRBdmF0YXJQb3B1cCk7XHJcblxyXG5wcm9maWxlQXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGVkaXRBdmF0YXJQb3B1cFdpbmRvdy5vcGVuKCk7XHJcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBwcm9maWxlUG9wdXBXaW5kb3cub3BlbigpO1xyXG4gIGNvbnN0IHt1c2VyTmFtZSwgdXNlckFib3V0fSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7IC8vIGdldCBvYmplY3Qgb2YgY3VycmVudCBuYW1lIGFuZCBwcm9mZXNzaW9uXHJcbiAgbmFtZUlucHV0LnZhbHVlID0gdXNlck5hbWU7XHJcbiAgcHJvZmVzc2lvbklucHV0LnZhbHVlID0gdXNlckFib3V0O1xyXG59KTtcclxuXHJcbnByb2ZpbGVBZGRDYXJkRm9ybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBhZGRDYXJkUG9wdXBXaW5kb3cub3BlbigpO1xyXG4gIGNhcmRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KTtcclxuXHJcbmNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxucHJvZmlsZUZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmFwaVxyXG4gIC5wcm9taXNlQ2FyZHNBbmRVc2VyRGF0YSgpXHJcbiAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgIHVzZXJOYW1lOiB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICB1c2VyQWJvdXQ6IHVzZXJEYXRhLmFib3V0XHJcbiAgICB9KTtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIodXNlckRhdGEuYXZhdGFyKTtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJZCh1c2VyRGF0YS5faWQpO1xyXG4gICAgY2FyZFNlY3Rpb24ucmVuZGVyZXIoY2FyZHMpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHt1c2VyTmFtZSwgdXNlckFib3V0LCBhdmF0YXIsIHVzZXJJZH0pIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lID0gdXNlck5hbWU7XHJcbiAgICB0aGlzLl91c2VyQWJvdXQgPSB1c2VyQWJvdXQ7XHJcbiAgICB0aGlzLl9hdmF0YXIgPSBhdmF0YXI7XHJcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHVzZXJOYW1lOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgdXNlckFib3V0OiB0aGlzLl91c2VyQWJvdXQudGV4dENvbnRlbnQsXHJcbiAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oe3VzZXJOYW1lLCB1c2VyQWJvdXR9KSB7XHJcbiAgICB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCA9IHVzZXJOYW1lO1xyXG4gICAgdGhpcy5fdXNlckFib3V0LnRleHRDb250ZW50ID0gdXNlckFib3V0O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckF2YXRhcihhdmF0YXIpIHtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBhdmF0YXI7XHJcbiAgICB0aGlzLl9hdmF0YXIuYWx0ID0gJ0F2YXRhcic7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySWQodXNlcklkKSB7XHJcbiAgICB0aGlzLl91c2VySWQuaWQgPSB1c2VySWQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5fdXJsID0gb3B0aW9ucy5iYXNlVXJsO1xyXG4gICAgdGhpcy5fdG9rZW4gPSBvcHRpb25zLnRva2VuO1xyXG4gIH1cclxuXHJcbiAgcHJvbWlzZUNhcmRzQW5kVXNlckRhdGEoKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0VXNlckRhdGEoKSwgdGhpcy5nZXRJbml0aWFsQ2FyZHMoKV0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHthdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbn1cclxuICAgIH0pLnRoZW4ocmVzID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VyRGF0YSgpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB7YXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW59XHJcbiAgICB9KS50aGVuKHJlcyA9PiB7XHJcbiAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZWRpdFByb2ZpbGUodXNlck5hbWUsIHVzZXJBYm91dCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IHVzZXJOYW1lLFxyXG4gICAgICAgIGFib3V0OiB1c2VyQWJvdXRcclxuICAgICAgfSlcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkTmV3Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbixcclxuICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIGxpbms6IGxpbmtcclxuICAgICAgfSlcclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJlbW92ZVVzZXJDYXJkID0gY2FyZElkID0+IHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxyXG4gICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgfVxyXG4gICAgfSkudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGFkZExpa2UgPSBjYXJkSWQgPT4ge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9XHJcbiAgICB9KS50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmVtb3ZlTGlrZSA9IGNhcmRJZCA9PiB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbixcclxuICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgIH1cclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBlZGl0QXZhdGFyID0gYXZhdGFyID0+IHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7YXZhdGFyfSlcclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgLy8gdGhpcy5fcG9wdXBcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICB9XHJcblxyXG4gIHN1Ym1pdEhhbmRsZXIoY2FsbCkge1xyXG4gICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IGNhbGw7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZXZ0ID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJlbmRlckxvYWRpbmdPbkJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKS50ZXh0Q29udGVudCA9ICdMb2FkaW5nLi4uJztcclxuICB9XHJcblxyXG4gIHJlbW92ZUxvYWRpbmdPbkJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKS50ZXh0Q29udGVudCA9ICdZZXMnO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBvcGVuID0gKHtsaW5rLCBuYW1lfSkgPT4ge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG5cclxuICAgIGNvbnN0IGltYWdlUG9wdXBUaXRsZUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3RpdGxlX3R5cGVfaW1hZ2UnKTtcclxuICAgIGNvbnN0IGltYWdlUG9wdXBJbWFnZUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XHJcblxyXG4gICAgaW1hZ2VQb3B1cFRpdGxlRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBpbWFnZVBvcHVwSW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XHJcbiAgICBpbWFnZVBvcHVwSW1hZ2VFbGVtZW50LmFsdCA9IG5hbWU7XHJcbiAgfTtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcihjb250YWluZXJTZWxlY3Rvciwge3JlbmRlcmVyfSkge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcblxyXG4gIHJlbmRlcmVyKGl0ZW1zKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsInRoaXMiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJyZXNldFZhbGlkYXRpb24iLCJpbnB1dEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImJ1dHRvbkVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZm9yRWFjaCIsImlucHV0RWxlbWVudCIsIl9oaWRlSW5wdXRFcnJvciIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImVycm9yRWxlbWVudCIsImlkIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwidGV4dENvbnRlbnQiLCJzb21lIiwidmFsaWRpdHkiLCJ2YWxpZCIsImFkZCIsImRpc2FibGVkIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIkNhcmQiLCJjYXJkRGF0YSIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwib25JbWFnZUNsaWNrIiwidXNlcklkIiwiaGFuZGxlRGVsZXRlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNhcmRDbGljayIsIl9lbGVtZW50IiwiX2xpa2VDb3VudGVyIiwibGVuZ3RoIiwiaXNMaWtlZEJ5VXNlciIsIl9hZGRMaWtlQnV0dG9uIiwiX3JlbW92ZUxpa2VCdXR0b24iLCJfaGFuZGxlTGlrZUNhcmRDbGljayIsIl9jYXJkSWQiLCJkZWxldGVDYXJkQnV0dG9uIiwiX2NhcmRVc2VySWQiLCJfdXNlcklkIiwiX2hhbmRsZURlbGV0ZUNhcmRDbGljayIsIl9oYW5kbGVQcmV2aWV3UGljdHVyZSIsIl9vbkltYWdlQ2xpY2siLCJsaW5rIiwiX2xpbmsiLCJuYW1lIiwiX25hbWUiLCJfdGVtcGxhdGUiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2UiLCJjYXJkTGlrZUNvdW50ZXIiLCJzcmMiLCJhbHQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJyZW5kZXJMaWtlQ29udGFpbmVyIiwib3duZXIiLCJfaWQiLCJsaWtlcyIsImRvY3VtZW50IiwiY29udGVudCIsImxpa2UiLCJ1cGRhdGVMaWtlQ291bnRlciIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsInRhcmdldCIsImNvbnRhaW5zIiwiY2xvc2UiLCJrZXkiLCJfcG9wdXAiLCJvcGVuIiwiX2hhbmRsZUVzY0Nsb3NlIiwiX2hhbmRsZU1vdXNlRG93biIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlU3VibWl0Iiwic3VwZXIiLCJfZm9ybSIsIl9vcmlnaW5hbEJ1dHRvblRleHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJyZW5kZXJMb2FkaW5nT25CdXR0b24iLCJyZW1vdmVMb2FkaW5nT25CdXR0b24iLCJzZXRFdmVudExpc3RlbmVycyIsInJlc2V0IiwiZWRpdFByb2ZpbGVQb3B1cCIsImFkZENhcmRQb3B1cCIsImVkaXRBdmF0YXJQb3B1cCIsInByb2ZpbGVDb250YWluZXIiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVQcm9mZXNzaW9uIiwicHJvZmlsZUF2YXRhciIsImltYWdlUG9wdXAiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVBZGRDYXJkRm9ybUJ1dHRvbiIsInByb2ZpbGVBdmF0YXJCdXR0b24iLCJmb3JtU2V0dGluZ3MiLCJjYXJkQWRkRm9ybSIsImVkaXRQcm9maWxlRm9ybSIsIm5hbWVJbnB1dCIsInByb2Zlc3Npb25JbnB1dCIsInVzZXJJbmZvIiwidXNlck5hbWUiLCJ1c2VyQWJvdXQiLCJhdmF0YXIiLCJfdXNlck5hbWUiLCJfdXNlckFib3V0IiwiX2F2YXRhciIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwic2V0VXNlcklkIiwiYXBpIiwib3B0aW9ucyIsImNhcmRJZCIsImZldGNoIiwiX3VybCIsIm1ldGhvZCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiX3Rva2VuIiwidGhlbiIsInJlc3BvbnNlIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYmFzZVVybCIsInRva2VuIiwicHJvbWlzZUNhcmRzQW5kVXNlckRhdGEiLCJhbGwiLCJnZXRVc2VyRGF0YSIsImdldEluaXRpYWxDYXJkcyIsInJlcyIsImVkaXRQcm9maWxlIiwiYWJvdXQiLCJhZGROZXdDYXJkIiwiY29uZmlybWF0aW9uUG9wdXAiLCJfc3VibWl0SGFuZGxlciIsInN1Ym1pdEhhbmRsZXIiLCJjYWxsIiwiaW1hZ2VQb3B1cFdpbmRvdyIsImltYWdlUG9wdXBUaXRsZUVsZW1lbnQiLCJpbWFnZVBvcHVwSW1hZ2VFbGVtZW50IiwicmVuZGVyQ2FyZCIsIml0ZW0iLCJuZXdDYXJkIiwicmVtb3ZlVXNlckNhcmQiLCJyZW1vdmVDYXJkRWxlbWVudCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImZpbmFsbHkiLCJyZW1vdmVMaWtlIiwiY2FyZCIsImFkZExpa2UiLCJjYXJkRWxlbWVudCIsImNhcmRTZWN0aW9uIiwiYWRkSXRlbSIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZWxlbWVudCIsInByZXBlbmQiLCJpdGVtcyIsIl9pdGVtcyIsInByb2ZpbGVQb3B1cFdpbmRvdyIsImFzeW5jIiwicHJvZmVzc2lvbiIsInByb21pc2VJbmZvIiwicmVzb2x2ZSIsImFkZENhcmRQb3B1cFdpbmRvdyIsImNhcmR0aXRsZSIsImltYWdlbGluayIsImRhdGEiLCJlZGl0QXZhdGFyUG9wdXBXaW5kb3ciLCJhdmF0YXJVcmwiLCJzZW5kQXZhdGFyIiwiZWRpdEF2YXRhciIsImNhcmRGb3JtVmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwiYXZhdGFyRm9ybVZhbGlkYXRvciIsInVzZXJEYXRhIiwiY2FyZHMiXSwic291cmNlUm9vdCI6IiJ9